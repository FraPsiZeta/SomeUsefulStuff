#!/bin/bash

#Name of the plugins folders, add here when new plugins come
declare -a names=("vim-commentary" "vim-indent-objects" "vim-hybrid-master" "vim-cpp-enhanced-highlight-master")
declare -a strings_with_blank_lines=("" "\"Test string for plugins install script" "" "\"Plugins" "" "set runtimepath+=~/.vim/boundle/vim-commentary" "set runtimepath+=~/.vim/boundle/vim-indent-object" "set runtimepath+=~/.vim/boundle/vim-cpp-enhanced-highlight-master/after" "set runtimepath+=~/.vim/boundle/vim-hybrid-master" "" "\"Commentary plugin" "" "autocmd FileType cpp setlocal commentstring=//\ %s" "autocmd FileType cc setlocal commentstring=//\ %s" "autocmd FileType C setlocal commentstring=//\ %s" "" "\"Set Theme" "" "set background=dark" "colorscheme hybrid" "" "\"Cpp Syntax highlight options" "" "let g:cpp_class_scope_highlight = 1" "let g:cpp_member_variable_highlight = 1" "let g:cpp_class_decl_highlight = 1" "")
declare -a strings_with_no_blank_lines=("\"Test string for plugins install script" "\"Plugins" "set runtimepath+=~/.vim/boundle/vim-commentary" "set runtimepath+=~/.vim/boundle/vim-indent-object" "set runtimepath+=~/.vim/boundle/vim-cpp-enhanced-highlight-master/after" "set runtimepath+=~/.vim/boundle/vim-hybrid-master" "\"Commentary plugin" "autocmd FileType cpp setlocal commentstring=" "autocmd FileType cc setlocal commentstring=" "autocmd FileType C setlocal commentstring=" "\"Set Theme" "set background=dark" "colorscheme hybrid" "\"Cpp Syntax highlight options" "let g:cpp_class_scope_highlight = 1" "let g:cpp_member_variable_highlight = 1" "let g:cpp_class_decl_highlight = 1")

vimrc="$HOME/.vimrc"
teststring="\"Test string for plugins install script"
vimpath="$HOME/.vim/boundle"

echo "This script install some plugins on .vim/boundle folder, and set the runtimepath to find them in .vimrc. The script installation is done without any plugin manager, but it could break something if some of the plugins are already installed in some other path or with some p.m. The plugins that will get install are:"
for i in ${names[@]}
do
	echo "-> $i"
done

while true; do
    read -p "Do you wish to install this plugins (y/n)?" yn
    case $yn in
        [Yy]* ) if [[ -d "$vimpath" ]] ; then
	cp -n -r ./boundle/* $vimpath
	if [[ $? -eq 0 ]] ; then
		echo "Plugins copied in $vimpath!"
		if [[ -z "$(grep "$teststring" "$vimrc")" ]] ; then
			for j in "${strings_with_blank_lines[@]}"
			do
				echo -e "$j" >> $vimrc
			done
		else
			for k in "${strings_with_no_blank_lines[@]}"
			do
				sed -i '\,'"$k"',d' $vimrc
			done
			for l in "${strings_with_blank_lines[@]}"
			do
				echo -e "$l" >> $vimrc
			done
		fi
	else
		echo "Something went wrong.."
	fi
else
	mkdir $vimpath
	cp -r ./boundle/* $vimpath
	if [[ $? -eq 0 ]] ; then
		echo "Created $vimpath directory and copied plugins in it!"
		if [[ -z "$(grep "$teststring" "$vimrc")" ]] ; then
			for j in "${strings_with_blank_lines[@]}"
			do
				echo -e "$j" >> $vimrc
			done
		else
			for k in "${strings_with_no_blank_lines[@]}"
			do
				sed -i '\,'"$k"',d' $vimrc
			done
			for l in "${strings_with_blank_lines[@]}"
			do
				echo -e "$l" >> $vimrc
			done
		fi
	else
		echo "Something went wrong.."
	fi
fi; break;;
        [Nn]* ) break;;
        * ) echo "Please answer y or n.";;
    esac
done

